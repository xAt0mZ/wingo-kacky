{"version":3,"sources":["components/LoadingSpinner.js","components/header/MapsCounter.js","components/header/index.js","components/body/MapButton.js","components/body/MapsButtonGroup.js","components/body/MapsRow.js","components/footer/MapDetails.js","components/footer/VideoPlayer.js","components/footer/index.js","models/map.js","components/body/Filters.js","App.js","index.js"],"names":["LoadingSpinner","Spinner","animation","role","size","className","MapsCounter","props","finished","total","Header","src","alt","width","height","style","borderRadius","MapButton","map","ToggleButton","id","type","variant","name","value","checked","onChange","onMapSelection","MapsButtonGroup","selectedId","ButtonGroup","maps","MapsRow","cols","Math","ceil","length","Row","Array","keys","row","slice","MapDetails","selectedMap","minWidth","date","toLocaleDateString","weekday","year","month","day","toLocaleTimeString","time","VideoPlayer","URL","title","allowFullScreen","Footer","clip","Map","Object","assign","this","parseDate","str","split","D","M","Y","h","m","s","Date","parse","x","def","parseInt","normalizeValues","Filters","App","bind","state","undefined","a","key","process","url","axios","get","res","data","valueRanges","r","values","v","match","transformClip","flat","setState","console","log","fetchData","_","find","finishedMapsCount","filter","totalMapsCount","filteredMaps","filterAndOrderMaps","Container","minHeight","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b97ca9c.chunk.js","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\" size=\"xxl\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}","export default function MapsCounter(props) {\r\n  return (\r\n    <span className={props.className + \" fs-1\"}>\r\n      {props.finished} / {props.total}\r\n    </span>\r\n  );\r\n}","import MapsCounter from './MapsCounter';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className=\"py-3 mb-2 border-bottom hstack gap-1\">\r\n      <div className=\"d-flex align-items-center mb-3 mb-md-0\">\r\n        <img\r\n          src=\"https://static-cdn.jtvnw.net/jtv_user_pictures/78ac5f9f-024b-4bf3-9098-e2278ebdc26a-profile_image-70x70.png\"\r\n          alt=\"Wingo logo\"\r\n          width=\"70\"\r\n          height=\"70\"\r\n          className=\"me-2\"\r\n          style={{ borderRadius: \"50%\" }} />\r\n        <span className=\"fs-1\">Wingobear - Kacky 2021</span>\r\n      </div>\r\n      <MapsCounter className=\"ms-auto\" finished={props.finished} total={props.total} />\r\n    </header>\r\n  );\r\n}","import ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nexport default function MapButton(props) {\r\n  const map = props.map;\r\n  return (\r\n    <ToggleButton\r\n      id={`radio-${map.id}`}\r\n      type=\"radio\"\r\n      variant={map.finished ? 'outline-success' : 'outline-danger'}\r\n      name=\"radio\"\r\n      value={map.id}\r\n      checked={props.checked}\r\n      onChange={() => props.onMapSelection(map.id)}\r\n      className=\"m-1 fw-bolder\"\r\n    >\r\n      {map.id}\r\n    </ToggleButton>\r\n  );\r\n}\r\n","import ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nimport MapButton from './MapButton';\r\n\r\nexport default function MapsButtonGroup(props) {\r\n  const selectedId = props.selectedId;\r\n\r\n  return (\r\n    <ButtonGroup size=\"sm\" className=\"btn-group-justified\">\r\n      {props.maps.map((map) => {\r\n        return (\r\n          <MapButton\r\n            map={map}\r\n            key={map.id}\r\n            checked={selectedId === map.id}\r\n            onMapSelection={props.onMapSelection} />\r\n        );\r\n      })}\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\nimport MapsButtonGroup from './MapsButtonGroup';\r\n\r\nexport default function MapsRow(props) {\r\n  const rows = 3;\r\n  const cols = Math.ceil(props.maps.length / rows);\r\n  const selectedId = props.selectedId;\r\n\r\n  return (\r\n    <Row>\r\n      {[...Array(rows).keys()].map((row) =>\r\n        <MapsButtonGroup\r\n          key={row}\r\n          selectedId={selectedId}\r\n          maps={props.maps.slice(row * cols, (row + 1) * cols)}\r\n          onMapSelection={props.onMapSelection} />\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n","export default function MapDetails(props) {\r\n  const selectedMap = props.map;\r\n  if (!selectedMap || !selectedMap.finished) {\r\n    return (<div></div>);\r\n  }\r\n\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n  return (\r\n    <div className=\"vstack flex-grow-0 gap-5 mt-5 fs-3\" style={{ minWidth: '25%' }}>\r\n      <span className=\"fs-1\">\r\n        {selectedMap.id}\r\n      </span>\r\n      <div>\r\n        <span className=\"d-block\">\r\n          {selectedMap.date.toLocaleDateString('fr-FR', options)}\r\n        </span>\r\n        <span className=\"d-block\">\r\n          {selectedMap.date.toLocaleTimeString('fr-FR')}\r\n        </span>\r\n      </div>\r\n      <span className=\"fs-3\">\r\n        {selectedMap.time}\r\n      </span>\r\n    </div >\r\n  );\r\n}","export default function VideoPlayer(props) {\r\n  return (\r\n    <div className=\"w-100 h-100\">\r\n      {props.URL &&\r\n        <iframe\r\n          title=\"Map clip\"\r\n          src={props.URL}\r\n          width=\"100%\" height=\"100%\" allowFullScreen\r\n        ></iframe>}\r\n    </div>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\nimport MapDetails from './MapDetails';\r\n\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <Row className=\"flex-fill\">\r\n      <div className=\"hstack gap-2\">\r\n        <MapDetails map={props.selectedMap} />\r\n        <VideoPlayer URL={props.selectedMap ? props.selectedMap.clip : ''} />\r\n      </div>\r\n    </Row>\r\n  );\r\n}","export default class Map {\r\n  constructor(id, finished, date, time, clip) {\r\n    Object.assign(this, { id, finished, date, time, clip });\r\n  }\r\n}\r\n\r\nfunction transformClip(str) {\r\n  let clip = str.match(/(https:\\/\\/clips\\.twitch\\.tv\\/)(.+)\";/);\r\n  if (clip) {\r\n    clip = `${clip[1]}embed?clip=${clip[2]}&parent=${process.env.REACT_APP_IFRAME_PARENT}`;\r\n  } else {\r\n    clip = str.match(/(https:\\/\\/streamable\\.com\\/)(.+)\";/);\r\n    clip = `${clip[1]}o/${clip[2]}`;\r\n  }\r\n  return clip;\r\n}\r\n\r\nfunction normalizeValues([D, M, Y, h, m, s]) {\r\n  const parse = (x, def = 0) => x ? parseInt(x) : def;\r\n\r\n  D = parse(D);\r\n  M = parse(M, 8) - 1;\r\n  Y = parse(Y, 2012);\r\n  h = parse(h);\r\n  m = parse(m);\r\n  s = parse(s);\r\n  return [Y, M, D, h, m, s];\r\n}\r\n\r\nfunction parseDate(str) {\r\n  const [date, time] = str.split(' ');\r\n  const [D, M, Y] = date.split('/');\r\n  let [h, m, s] = [0, 0, 0];\r\n  if (time) {\r\n    [h, m , s] = time.split(':');\r\n  }\r\n  return new Date(...normalizeValues([D, M, Y, h, m, s]));\r\n}\r\n\r\nexport function extractMaps(data) {\r\n  return data.valueRanges.map((r) =>\r\n    r.values.map((v) => {\r\n      const [id, finished, date, time, clip] = v;\r\n      if (!finished) {\r\n        return new Map(id, finished);\r\n      }\r\n      return new Map(id, finished, parseDate(date), time, transformClip(clip))\r\n    })\r\n  ).flat();\r\n}","import { Row } from \"react-bootstrap\";\r\n\r\nexport default function Filters(props) {\r\n  return (\r\n    <Row>\r\n      <div className=\"hstack gap-2\"></div>\r\n    </Row>\r\n  );\r\n}","import React from 'react';\r\nimport _ from 'lodash-es';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport Header from './components/header'\r\nimport MapsRow from './components/body/MapsRow';\r\nimport Footer from './components/footer';\r\n\r\nimport { extractMaps } from './models/map';\r\nimport axios from 'axios';\r\nimport Filters from './components/body/Filters';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMapSelection = this.onMapSelection.bind(this);\r\n\r\n    this.state = {\r\n      maps: [],\r\n      selectedMap: undefined,\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      const baseURL = 'https://sheets.googleapis.com/v4/spreadsheets/1Yqkhv4ayhwFkV39W0W7GLt1FnpHLUUXtpgGvRklnDnI/values:batchGet';\r\n      const key = `key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\r\n      const ranges = 'ranges=WINGO!A2:F33&ranges=WINGO!G2:L33&ranges=WINGO!M2:R12';\r\n      const options = 'valueRenderOption=FORMULA&dateTimeRenderOption=FORMATTED_STRING'\r\n      const url = `${baseURL}?${key}&${ranges}&${options}`;\r\n      const res = await axios.get(url);\r\n      const maps = extractMaps(res.data);\r\n\r\n      this.setState({ maps })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  onMapSelection(id) {\r\n    this.setState({\r\n      selectedMap: _.find(this.state.maps, { id: id })\r\n    });\r\n  }\r\n\r\n  filterAndOrderMaps() {\r\n    return this.state.maps;\r\n  }\r\n\r\n  render() {\r\n    const selectedId = this.state.selectedMap ? this.state.selectedMap.id : 0;\r\n    const finishedMapsCount = _.filter(this.state.maps, { finished: true }).length;\r\n    const totalMapsCount = this.state.maps.length;\r\n    const filteredMaps = this.filterAndOrderMaps();\r\n\r\n    if (!this.state.maps.length) {\r\n      return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\" style={{ width: \"100vh\", height: \"100vh\" }}>\r\n          <LoadingSpinner></LoadingSpinner>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className=\"vstack gap-2 p-0 pb-2 text-center\" style={{ minHeight: \"100vh\" }}>\r\n        <Header finished={finishedMapsCount} total={totalMapsCount} />\r\n        <Filters />\r\n        <MapsRow maps={filteredMaps} selectedId={selectedId} onMapSelection={this.onMapSelection} />\r\n        <Footer selectedMap={this.state.selectedMap} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import reportWebVitals from './reportWebVitals';\n\nimport './index.css'\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}