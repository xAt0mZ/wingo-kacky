{"version":3,"sources":["components/LoadingSpinner.js","components/header/MapsCounter.js","components/header/index.js","components/body/MapButton.js","components/body/MapsButtonGroup.js","components/body/MapsRow.js","components/footer/VideoPlayer.js","components/footer/index.js","models/map.js","App.js","index.js"],"names":["LoadingSpinner","Spinner","animation","role","size","className","MapsCounter","props","finished","total","Header","src","alt","width","height","style","borderRadius","MapButton","map","ToggleButton","id","type","variant","name","value","checked","onChange","onMapSelection","MapsButtonGroup","selectedId","ButtonGroup","maps","MapsRow","rows","cols","Row","Array","keys","row","slice","VideoPlayer","URL","title","allowFullScreen","Footer","selectedMap","clip","Map","date","time","Object","assign","this","App","bind","state","undefined","a","key","process","url","axios","get","res","data","valueRanges","r","values","v","clipCell","match","flat","setState","console","log","fetchData","_","find","finishedMapsCount","filter","length","totalMapsCount","Container","minHeight","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e42fc75b.chunk.js","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\" size=\"xxl\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}","export default function MapsCounter(props) {\r\n  return (\r\n    <span className=\"fs-1\">{props.finished} / {props.total}</span>\r\n  );\r\n}","import MapsCounter from './MapsCounter';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <header className=\"py-3 mb-4 border-bottom d-flex align-items-center justify-content-between\">\r\n      <div className=\"d-flex align-items-center mb-3 mb-md-0\">\r\n        <img\r\n          src=\"https://static-cdn.jtvnw.net/jtv_user_pictures/78ac5f9f-024b-4bf3-9098-e2278ebdc26a-profile_image-70x70.png\"\r\n          alt=\"Wingo logo\"\r\n          width=\"70\"\r\n          height=\"70\"\r\n          className=\"me-2\"\r\n          style={{ borderRadius: \"50%\" }} />\r\n        <span className=\"fs-1\">Wingobear - Kacky 2021</span>\r\n      </div>\r\n      <MapsCounter finished={props.finished} total={props.total}/>\r\n    </header>\r\n  );\r\n}","import ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nexport default function MapButton(props) {\r\n  const map = props.map;\r\n  return (\r\n    <ToggleButton\r\n      id={`radio-${map.id}`}\r\n      type=\"radio\"\r\n      variant={map.finished ? 'outline-success' : 'outline-danger'}\r\n      name=\"radio\"\r\n      value={map.id}\r\n      checked={props.checked}\r\n      onChange={() => props.onMapSelection(map.id)}\r\n      className=\"m-1 fw-bolder\"\r\n    >\r\n      {map.id}\r\n    </ToggleButton>\r\n  );\r\n}\r\n","import ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nimport MapButton from './MapButton';\r\n\r\nexport default function MapsButtonGroup(props) {\r\n  const selectedId = props.selectedId;\r\n\r\n  return (\r\n    <ButtonGroup size=\"sm\" className=\"btn-group-justified\">\r\n      {props.maps.map((map) => {\r\n        return (\r\n          <MapButton\r\n            map={map}\r\n            key={map.id}\r\n            checked={selectedId === map.id}\r\n            onMapSelection={props.onMapSelection} />\r\n        );\r\n      })}\r\n    </ButtonGroup>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\nimport MapsButtonGroup from './MapsButtonGroup';\r\n\r\nexport default function MapsRow(props) {\r\n  const rows = props.rows;\r\n  const cols = props.cols;\r\n  const selectedId = props.selectedId;\r\n\r\n  return (\r\n    <Row>\r\n      {[...Array(rows).keys()].map((row) =>\r\n        <MapsButtonGroup\r\n          className=\"d-flex justify-content-evenly\"\r\n          key={row}\r\n          selectedId={selectedId}\r\n          maps={props.maps.slice(row * cols, (row + 1) * cols)}\r\n          onMapSelection={props.onMapSelection} />\r\n      )}\r\n    </Row>\r\n  );\r\n}\r\n","export default function VideoPlayer(props) {\r\n  return (\r\n    <div>\r\n      {props.URL &&\r\n        <iframe\r\n          title=\"Map clip\"\r\n          src={props.URL}\r\n          width=\"100%\" height=\"100%\" allowFullScreen\r\n        ></iframe>}\r\n    </div>\r\n  );\r\n}\r\n","import Row from 'react-bootstrap/Row';\r\n\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    <Row className=\"justify-content-center flex-fill\">\r\n      <VideoPlayer URL={props.selectedMap ? props.selectedMap.clip : ''} />\r\n    </Row>\r\n  );\r\n}","export default class Map {\r\n  constructor(id, finished, date, time, clip) {\r\n    Object.assign(this, { id, finished, date, time, clip });\r\n  }\r\n}\r\n\r\nexport function extractMaps(data) {\r\n  return data.valueRanges.map((r) =>\r\n    r.values.map((v) => {\r\n      const [id, finished, date, time, clipCell] = v;\r\n      if (!finished) {\r\n        return new Map(id, finished);\r\n      }\r\n      let clip = clipCell.match(/(https:\\/\\/clips\\.twitch\\.tv\\/)(.+)\";/);\r\n      if (clip) {\r\n        clip = `${clip[1]}embed?clip=${clip[2]}&parent=${process.env.REACT_APP_IFRAME_PARENT}`;\r\n      } else {\r\n        clip = clipCell.match(/(https:\\/\\/streamable\\.com\\/)(.+)\";/);\r\n        clip = `${clip[1]}o/${clip[2]}`;\r\n      }\r\n      return new Map(id, finished, date, time, clip)\r\n    })\r\n  ).flat();\r\n}","import React from 'react';\r\nimport _ from 'lodash-es';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\nimport Header from './components/header'\r\nimport MapsRow from './components/body/MapsRow';\r\nimport Footer from './components/footer';\r\n\r\nimport { extractMaps } from './models/map';\r\nimport axios from 'axios';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMapSelection = this.onMapSelection.bind(this);\r\n\r\n    this.state = {\r\n      maps: [],\r\n      selectedMap: undefined,\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      const baseURL = 'https://sheets.googleapis.com/v4/spreadsheets/1Yqkhv4ayhwFkV39W0W7GLt1FnpHLUUXtpgGvRklnDnI/values:batchGet';\r\n      const key = `key=${process.env.REACT_APP_GOOGLE_API_KEY}`;\r\n      const ranges = 'ranges=WINGO!A2:F33&ranges=WINGO!G2:L33&ranges=WINGO!M2:R12';\r\n      const options = 'valueRenderOption=FORMULA&dateTimeRenderOption=FORMATTED_STRING'\r\n      const url = `${baseURL}?${key}&${ranges}&${options}`;\r\n      const res = await axios.get(url);\r\n      const maps = extractMaps(res.data);\r\n\r\n      this.setState({ maps })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  onMapSelection(id) {\r\n    this.setState({\r\n      selectedMap: _.find(this.state.maps, { id: id })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const selectedId = this.state.selectedMap ? this.state.selectedMap.id : 0;\r\n    const finishedMapsCount = _.filter(this.state.maps, { finished: true }).length;\r\n    const totalMapsCount = this.state.maps.length;\r\n\r\n    if (!this.state.maps.length) {\r\n      return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\" style={{ width: \"100vh\", height: \"100vh\" }}>\r\n          <LoadingSpinner></LoadingSpinner>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container className=\"vstack gap-2 m-auto text-center \" style={{ minHeight: \"100vh\" }}>\r\n        <Header finished={finishedMapsCount} total={totalMapsCount} />\r\n\r\n        <MapsRow\r\n          rows={5}\r\n          cols={15}\r\n          maps={this.state.maps}\r\n          selectedId={selectedId}\r\n          onMapSelection={this.onMapSelection} />\r\n\r\n        <Footer selectedMap={this.state.selectedMap} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import reportWebVitals from './reportWebVitals';\n\nimport './index.css'\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}